/*
 * scheduler.h
 *
 *  Created on: Nov 24, 2022
 *      Author: Linh
 */

#ifndef INC_SCHEDULER_H_
#define INC_SCHEDULER_H_

#include <stdint.h>

typedef struct {
	void (*pTask)(void);
	uint32_t Delay;
	uint32_t Period;
	uint8_t RunMe;
	uint32_t TaskID;
} sTasks;

// MUST BE ADJUSTED FOR EACH NEW PROJECT
#define SCH_MAX_TASKS 40

void SCH_Init(void);
void SCH_Update(void);
void SCH_Dispatch_Tasks(void);
void SCH_Shift_Task(const int TASK_INDEX);
unsigned char SCH_Add_Task(void (*pFunction)(), unsigned int DELAY, unsigned int PERIOD);
unsigned char SCH_Delete_Task(const int TASK_INDEX);

#endif /* INC_SCHEDULER_H_ */



//
//#ifndef INC_SCHEDULER_H_
//#define INC_SCHEDULER_H_
//
//#include <stdint.h>
//
//typedef struct {
//	void (*pTask)(void);
//	uint32_t Delay;
//	uint32_t Period;
//	uint8_t RunMe;
//	uint32_t TaskID;
//} sTasks;
//
//#define SCH_MAX_TASKS	40
//
//void SCH_Init(void);
//void SCH_Add_Task(void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD);
//void SCH_Update(void);
//void SCH_Dispatch_Tasks(void);
//unsigned char SCH_Delete_Task(const int TASK_INDEX);
//
//#endif /* INC_SCHEDULER_H_ */
