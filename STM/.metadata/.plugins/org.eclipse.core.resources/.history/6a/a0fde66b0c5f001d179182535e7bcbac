/*
 * button.c
 *
 *  Created on: Nov 1, 2022
 *      Author: Linh
 */


#include "button.h"

int KeyReg0[NUM_OF_BUTTONS];
int KeyReg1[NUM_OF_BUTTONS];
int KeyReg2[NUM_OF_BUTTONS];
int KeyReg3[NUM_OF_BUTTONS];
int button_flag[NUM_OF_BUTTONS];
int TimeOutForKeyPress[NUM_OF_BUTTONS];

int isButtonPressed(int index) {
	if (button_flag[index] == 1) {
		button_flag[index] = 0;
		return 1;
	}
	return 0;
}

void subKeyProcess(int index) {
	button_flag[index] = 1;
}

void clearButton() {
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, NORMAL_STATE);
	HAL_GPIO_WritePin(INC_GPIO_Port, INC_Pin, NORMAL_STATE);
	HAL_GPIO_WritePin(DEC_GPIO_Port, DEC_Pin, NORMAL_STATE);
}

void getKeyInput() {
	clearButton();
	for (int i = 0; i < NUM_OF_BUTTONS; i++) {
		KeyReg0[i] = KeyReg1[i];
		KeyReg1[i] = KeyReg2[i];

		if (i == 0) {
			KeyReg2[i] = HAL_GPIO_ReadPin(RESET_GPIO_Port, RESET_Pin);
		} else if (i == 1) {
			KeyReg2[i] = HAL_GPIO_ReadPin(INC_GPIO_Port, INC_Pin);
		} else if (i == 2) {
			KeyReg2[i] = HAL_GPIO_ReadPin(DEC_GPIO_Port, DEC_Pin);
		}
		if ((KeyReg0[i] == KeyReg1[i]) && (KeyReg1[i] == KeyReg2[i])) {
			if (KeyReg3[i] != KeyReg2[i]) {
				KeyReg3[i] = KeyReg2[i];

				if (KeyReg2[i] == PRESSED_STATE) {
					TimeOutForKeyPress[i] = 300;
					subKeyProcess(i);
				}
			} else {
				TimeOutForKeyPress[i]--;
				if (TimeOutForKeyPress[i] == 0) {
					if (KeyReg2[i] == PRESSED_STATE) {
						subKeyProcess(i);
					}
					TimeOutForKeyPress[i] = 100;
				}
			}
		}
	}
}

